"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[37060],{8732:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return d},metadata:function(){return l},toc:function(){return h}});var i=n(85893),r=n(11151),a=n(74866),o=n(85162),s=n(23734);const d={id:"docs-chat-ui-components-advanced-chatview-component",title:"ChatView Component",hide_title:!0,slug:"./chatview-component",displayed_sidebar:"pushChatSidebar",sidebar_position:2,image:"/assets/docs/previews/docs_chat_ui_components_advanced--chatview_component.png"},c="ChatView",l={id:"chat/ui-components/Advanced/docs-chat-ui-components-advanced-chatview-component",title:"ChatView Component",description:"Effortless Messaging Integration: Add a Complete Chat Interface to Your Dapp with ChatView Component.",source:"@site/docs/chat/03-ui-components/Advanced/02-Integrate-Advanced-ChatView-Component.mdx",sourceDirName:"chat/03-ui-components/Advanced",slug:"/chat/ui-components/Advanced/chatview-component",permalink:"/docs/chat/ui-components/Advanced/chatview-component",draft:!1,unlisted:!1,editUrl:"https://github.com/ethereum-push-notification-service/push-website/blob/main/docs/chat/03-ui-components/Advanced/02-Integrate-Advanced-ChatView-Component.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"docs-chat-ui-components-advanced-chatview-component",title:"ChatView Component",hide_title:!0,slug:"./chatview-component",displayed_sidebar:"pushChatSidebar",sidebar_position:2,image:"/assets/docs/previews/docs_chat_ui_components_advanced--chatview_component.png"},sidebar:"pushChatSidebar",previous:{title:"ChatUIProvider",permalink:"/docs/chat/ui-components/Advanced/chatuiprovider"},next:{title:"ChatProfile Component",permalink:"/docs/chat/ui-components/Advanced/chatprofile-component"}},u={},h=[{value:"Usage",id:"usage",level:2},{value:"Customization parameters",id:"customization-parameters",level:3},{value:"Live playground",id:"live-playground",level:3}];function p(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components},{Head:d}=t;return d||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"chatview",children:"ChatView"}),"\n",(0,i.jsx)(t.p,{children:"Effortless Messaging Integration: Add a Complete Chat Interface to Your Dapp with ChatView Component."}),"\n",(0,i.jsx)(t.p,{children:"If you want to easily add a chat feature to your application without dealing with complex API calls, this is the solution for you. With the Chat View component, you get everything you need for a chat interface, including the chat profile, input box, and message list, all in one simple package. Say goodbye to the hassle of integrating individual components or making API calls. Just input your chat ID and customize it as needed \u2013 it's that easy!"}),"\n",(0,i.jsx)(d,{children:(0,i.jsx)("title",{children:"ChatView | UI Components (@pushprotocol/uiweb) | Push Chat | Push\nDocumentation"})}),"\n","\n","\n",(0,i.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(a.Z,{className:"codetabs",groupId:"code-examples",children:(0,i.jsxs)(o.Z,{value:"react",attributes:{className:"codetab react"},default:!0,children:[(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:'import { ChatView } from "@pushprotocol/uiweb";\n\nconst ChatViewTest = () => {\n  return (\n    <div>\n      <ChatView\n        chatId="89f7b382b9b1496dca2b9a94ef87c80dd102db05dcb40b165fabfab28770fd55"\n        limit={10}\n        verificationFailModalPosition={MODAL_POSITION_TYPE.RELATIVE}\n      />\n    </div>\n  );\n};\n\nexport default ChatViewTest;\n'})}),(0,i.jsx)(s.F0,{children:(0,i.jsx)("img",{src:n(8069).Z})})]})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"customization-parameters",children:"Customization parameters"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Param"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Default"}),(0,i.jsx)(t.th,{children:"Remarks"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:(0,i.jsx)(t.code,{children:"chatId"})})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"string"})}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:"Chat id for a particular chat"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"emoji"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"boolean"})}),(0,i.jsx)(t.td,{children:"true"}),(0,i.jsx)(t.td,{children:"Default value is true, decides if the input field will have emoji option"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"gif"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"boolean"})}),(0,i.jsx)(t.td,{children:"true"}),(0,i.jsx)(t.td,{children:"Default value is true,decides if the input field will have gif option"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"file"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"boolean"})}),(0,i.jsx)(t.td,{children:"true"}),(0,i.jsx)(t.td,{children:"Default value is true,decides if the input field will have file upload option"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"isConnected"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"boolean"})}),(0,i.jsx)(t.td,{children:"true"}),(0,i.jsx)(t.td,{children:"Default value is true,shows the connect button if signer, account and pgpPrivateKey is not passed"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"autoConnect"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"boolean"})}),(0,i.jsx)(t.td,{children:"false"}),(0,i.jsx)(t.td,{children:"Default value is false, decrypts pgpPrivateKey after reload if true, or else disconnects the existing wallet connection"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"onVerificationFail"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"function"})}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:"Function to perfom any task on gating access verification fail modal"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"messageInput"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"boolean"})}),(0,i.jsx)(t.td,{children:"true"}),(0,i.jsx)(t.td,{children:"Default value is true,decides whether to show the message input field"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"chatProfile"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"boolean"})}),(0,i.jsx)(t.td,{children:"true"}),(0,i.jsx)(t.td,{children:"Default value is true, decides whether to show the chat profile header"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"chatViewList"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"boolean"})}),(0,i.jsx)(t.td,{children:"true"}),(0,i.jsx)(t.td,{children:"Default value is true,decides whether to show the message list"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"groupInfoModalBackground"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"ModalBackgroundType"})}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsxs)(t.td,{children:["Default value is ",(0,i.jsx)(t.code,{children:'"OVERLAY"'}),", decides the group info modal background, possible values are ",(0,i.jsx)(t.code,{children:'"OVERLAY"'})," &#124 ",(0,i.jsx)(t.code,{children:'"BLUR"'})," &#124 ",(0,i.jsx)(t.code,{children:'"TRANSPARENT"'})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"groupInfoModalPosition"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"ModalBackgroundType"})}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsxs)(t.td,{children:["Default value is ",(0,i.jsx)(t.code,{children:'"GLOBAL"'}),", decides the group info modal position, it can be either relative to immediate parent(RELATIVE) or the entire screen(GLOBAL), possible values are ",(0,i.jsx)(t.code,{children:'"RELATIVE"'})," &#124 ",(0,i.jsx)(t.code,{children:'"GLOBAL"'})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"verificationFailModalBackground"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"ModalBackgroundType"})}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsxs)(t.td,{children:["Default value is ",(0,i.jsx)(t.code,{children:'"OVERLAY"'}),", decides the access gating verification fail modal background, possible values are ",(0,i.jsx)(t.code,{children:'"OVERLAY"'})," &#124 ",(0,i.jsx)(t.code,{children:'"BLUR"'})," &#124 ",(0,i.jsx)(t.code,{children:'"TRANSPARENT"'})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"verificationFailModalPosition"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"ModalBackgroundType"})}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsxs)(t.td,{children:["Default value is ",(0,i.jsx)(t.code,{children:'"GLOBAL"'}),", decides the access gating verification fail modal position, it can be either relative to immediate parent(RELATIVE) or the entire screen(GLOBAL), possible values are ",(0,i.jsx)(t.code,{children:'"RELATIVE"'})," &#124 ",(0,i.jsx)(t.code,{children:'"GLOBAL"'})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:(0,i.jsx)(t.code,{children:"chatFilterList"})})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"Array<string>"})}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:"Array of cid's of messages that needs to be excluded from chatViewList"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"limit"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"number"})}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:"Number of messages fetched in each paginated api call,default value is 10"})]})]})]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["Note: Refer ",(0,i.jsx)(t.a,{href:"/docs/chat/ui-components/Advanced/ChatUIProvider/",children:"ChatUIProvider"})," for details on its paramters."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"live-playground",children:"Live playground"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",metastring:"live",live:!0,children:'// DO NOT FORGET TO IMPORT LIBRARIES\n// NOT NEEDED HERE SINCE PLAYGROUND IMPORTS INTERNALLY\n// import { ChatUIProvider, ChatView } from @pushprotocol/uiweb;\nfunction App(props) {\n  return (\n    <>\n      <h2>\n        Live chat with pushai.eth, connect your wallet and chat to get sassy\n        response from PushAI.eth\n      </h2>\n      <div style={{ height: "75vh", margin: "20px auto" }}>\n        <ChatUIProvider>\n          <ChatView\n            chatId="0x99A08ac6254dcf7ccc37CeC662aeba8eFA666666"\n            limit={10}\n            isConnected={true}\n            autoConnect={false}\n            verificationFailModalPosition={MODAL_POSITION_TYPE.RELATIVE}\n          />\n        </ChatUIProvider>\n      </div>\n    </>\n  );\n}\n'})})]})}function f(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},85162:function(e,t,n){n.d(t,{Z:function(){return o}});n(67294);var i=n(86010),r={tabItem:"tabItem_Ymn6"},a=n(85893);function o(e){var t=e.children,n=e.hidden,o=e.className;return(0,a.jsx)("div",{role:"tabpanel",className:(0,i.default)(r.tabItem,o),hidden:n,children:t})}},74866:function(e,t,n){n.d(t,{Z:function(){return y}});var i=n(67294),r=n(86010),a=n(12466),o=n(16550),s=n(20469),d=n(91980),c=n(67392),l=n(50012);function u(e){var t,n;return null!==(t=null===(n=i.Children.toArray(e).filter((function(e){return"\n"!==e})).map((function(e){if(!e||(0,i.isValidElement)(e)&&((t=e.props)&&"object"==typeof t&&"value"in t))return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))||void 0===n?void 0:n.filter(Boolean))&&void 0!==t?t:[]}function h(e){var t=e.values,n=e.children;return(0,i.useMemo)((function(){var e=null!=t?t:function(e){return u(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}(n);return function(e){var t=(0,c.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function p(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function f(e){var t=e.queryString,n=void 0!==t&&t,r=e.groupId,a=(0,o.k6)(),s=function(e){var t=e.queryString,n=void 0!==t&&t,i=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=i?i:null}({queryString:n,groupId:r});return[(0,d._X)(s),(0,i.useCallback)((function(e){if(s){var t=new URLSearchParams(a.location.search);t.set(s,e),a.replace(Object.assign({},a.location,{search:t.toString()}))}}),[s,a])]}function x(e){var t,n,r,a,o=e.defaultValue,d=e.queryString,c=void 0!==d&&d,u=e.groupId,x=h(e),j=(0,i.useState)((function(){return function(e){var t,n=e.defaultValue,i=e.tabValues;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:i}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+i.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var r=null!==(t=i.find((function(e){return e.default})))&&void 0!==t?t:i[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:o,tabValues:x})})),v=j[0],m=j[1],b=f({queryString:c,groupId:u}),g=b[0],w=b[1],y=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),n=(0,l.Nk)(t),r=n[0],a=n[1],[r,(0,i.useCallback)((function(e){t&&a.set(e)}),[t,a])]),C=y[0],I=y[1],A=function(){var e=null!=g?g:C;return p({value:e,tabValues:x})?e:null}();return(0,s.Z)((function(){A&&m(A)}),[A]),{selectedValue:v,selectValue:(0,i.useCallback)((function(e){if(!p({value:e,tabValues:x}))throw new Error("Can't select invalid tab value="+e);m(e),w(e),I(e)}),[w,I,x]),tabValues:x}}var j=n(72389),v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"},m=n(85893);function b(e){var t=e.className,n=e.block,i=e.selectedValue,o=e.selectValue,s=e.tabValues,d=[],c=(0,a.o5)().blockElementScrollPositionUntilNextRender,l=function(e){var t=e.currentTarget,n=d.indexOf(t),r=s[n].value;r!==i&&(c(t),o(r))},u=function(e){var t,n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":var i,r=d.indexOf(e.currentTarget)+1;n=null!==(i=d[r])&&void 0!==i?i:d[0];break;case"ArrowLeft":var a,o=d.indexOf(e.currentTarget)-1;n=null!==(a=d[o])&&void 0!==a?a:d[d.length-1]}null===(t=n)||void 0===t||t.focus()};return(0,m.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.default)("tabs",{"tabs--block":n},t),children:s.map((function(e){var t=e.value,n=e.label,a=e.attributes;return(0,m.jsx)("li",Object.assign({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,ref:function(e){return d.push(e)},onKeyDown:u,onClick:l},a,{className:(0,r.default)("tabs__item",v.tabItem,null==a?void 0:a.className,{"tabs__item--active":i===t}),children:null!=n?n:t}),t)}))})}function g(e){var t=e.lazy,n=e.children,r=e.selectedValue,a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var o=a.find((function(e){return e.props.value===r}));return o?(0,i.cloneElement)(o,{className:"margin-top--md"}):null}return(0,m.jsx)("div",{className:"margin-top--md",children:a.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==r})}))})}function w(e){var t=x(e);return(0,m.jsxs)("div",{className:(0,r.default)("tabs-container",v.tabList),children:[(0,m.jsx)(b,Object.assign({},e,t)),(0,m.jsx)(g,Object.assign({},e,t))]})}function y(e){var t=(0,j.Z)();return(0,m.jsx)(w,Object.assign({},e,{children:u(e.children)}),String(t))}},8069:function(e,t,n){t.Z=n.p+"assets/images/chat-view-6ad966dbd2d5595085496e8a5fc555dd.png"},11151:function(e,t,n){n.d(t,{Z:function(){return s},a:function(){return o}});var i=n(67294);const r={},a=i.createContext(r);function o(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);