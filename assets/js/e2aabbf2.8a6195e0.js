"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[662],{50340:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return c},default:function(){return x},frontMatter:function(){return d},metadata:function(){return l},toc:function(){return h}});var r=t(85893),a=t(11151),i=t(23734),s=t(74866),o=t(85162);const d={id:"docs-chat-ui-components-integrate-push-chat",title:"Integrate Push Chat",hide_title:!0,slug:"./integrate-push-chat",displayed_sidebar:"pushChatSidebar",sidebar_position:1,image:"/assets/docs/previews/docs_chat_ui_components--integrate_push_chat.png"},c="Integrate Push Chat",l={id:"chat/ui-components/docs-chat-ui-components-integrate-push-chat",title:"Integrate Push Chat",description:"Streamline Chat Integration for Developers: Say goodbye to the hassles of UI design and API calls. With our web components available in the @pushprotocol/uiweb package, you can effortlessly integrate push chat functionality into your dapp using just a few lines of code.",source:"@site/docs/chat/03-ui-components/01-Integrate-Push-Chat.mdx",sourceDirName:"chat/03-ui-components",slug:"/chat/ui-components/integrate-push-chat",permalink:"/docs/chat/ui-components/integrate-push-chat",draft:!1,unlisted:!1,editUrl:"https://github.com/ethereum-push-notification-service/push-website/blob/main/docs/chat/03-ui-components/01-Integrate-Push-Chat.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"docs-chat-ui-components-integrate-push-chat",title:"Integrate Push Chat",hide_title:!0,slug:"./integrate-push-chat",displayed_sidebar:"pushChatSidebar",sidebar_position:1,image:"/assets/docs/previews/docs_chat_ui_components--integrate_push_chat.png"},sidebar:"pushChatSidebar",previous:{title:"UI Components",permalink:"/docs/chat/ui-components"},next:{title:"Integrate Support Bot",permalink:"/docs/chat/ui-components/integrate-support-bot"}},u={},h=[{value:"Usage",id:"usage",level:2},{value:"Customization Parameters",id:"customization-parameters",level:2},{value:"ChatUIProvider",id:"chatuiprovider",level:3},{value:"ChatView",id:"chatview",level:3},{value:"Live playground",id:"live-playground",level:2}];function p(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...e.components},{Head:d}=n;return d||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"integrate-push-chat",children:"Integrate Push Chat"}),"\n",(0,r.jsxs)(n.p,{children:["Streamline Chat Integration for Developers: Say goodbye to the hassles of UI design and API calls. With our web components available in the ",(0,r.jsx)(n.code,{children:"@pushprotocol/uiweb"})," package, you can effortlessly integrate push chat functionality into your dapp using just a few lines of code."]}),"\n",(0,r.jsxs)(n.p,{children:["As an example, take a look at how we seamlessly integrated the Push Chat View component into the ",(0,r.jsx)(n.a,{href:"/brb",children:(0,r.jsx)(n.code,{children:"push.org/brb"})})," website in the image below."]}),"\n",(0,r.jsx)(i.F0,{children:(0,r.jsx)("img",{src:t(8069).Z})}),"\n",(0,r.jsx)(d,{children:(0,r.jsx)("title",{children:"Integrate Push Chat | UI Components | Push Chat | Push Documentation"})}),"\n","\n","\n","\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.p,{children:"In order to add the above chatview component the developer just need to write few lines of code"}),"\n",(0,r.jsx)(s.Z,{className:"codetabs",groupId:"code-examples",children:(0,r.jsx)(o.Z,{value:"react",attributes:{className:"codetab react"},default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { ChatView, ChatUIProvider, darkChatTheme } from "@pushprotocol/uiweb";\n\nexport function App() {\n  // you can pass your own signer, if you don\'t pass a signer\n  // then it will automatically use the default onboarding kit i.e. blocknative\n  // !pgpPrivatekey && !account && !isConnected => will give the note\n  return (\n    <ChatUIProvider theme={darkChatTheme}>\n      <ChatView\n        chatId="b8e068e02fe12d7136bc2f24408835573f30c6fbf0b65ea26ab4c7055a2c85f1"\n        limit={10}\n        isConnected={true}\n        verificationFailModalPosition={MODAL_POSITION_TYPE.RELATIVE}\n      />\n    </ChatUIProvider>\n  );\n}\n'})})})}),"\n",(0,r.jsx)(n.h2,{id:"customization-parameters",children:"Customization Parameters"}),"\n",(0,r.jsx)(n.h3,{id:"chatuiprovider",children:"ChatUIProvider"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Param"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Remarks"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"account"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Supports wallet address or chain agnostic wallet address format"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"pgpPrivatekey"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Decrypted pgp private key of the user"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"theme"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"IChatTheme"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.a,{href:"/docs/chat/ui-components/advanced/themization/",children:"Theme object"}),", it can be custom theme object, ",(0,r.jsx)(n.code,{children:"lightChatTheme"})," ",(0,r.jsx)(n.code,{children:"darkChatTheme"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.code,{children:"children"})})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"React.ReactNode"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"env"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Env"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"API env - 'prod' or 'staging'"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"signer"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"SignerType"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"EthersV5 or Viem Signer"})]})]})]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Note: Parameters ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.code,{children:"in this style"})})," are mandatory."]}),"\n"]}),"\n",(0,r.jsx)(n.blockquote,{children:"\n"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Providing only signer in ChatUIProvider automatically fetches account and pgpPrivatekey"}),"\n",(0,r.jsx)(n.li,{children:"Providing no signer, automatically uses the default onboarding kit i.e. blocknative"}),"\n",(0,r.jsx)(n.li,{children:"Providing account and pgpPrivateKey works as usual"}),"\n",(0,r.jsx)(n.li,{children:"Providing no account , signer, pgpPrivateKey or isConnected as false, prompts a warning"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"chatview",children:"ChatView"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Param"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Remarks"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.code,{children:"chatId"})})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Chat id for a particular chat"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"emoji"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"Default value is true, decides if the input field will have emoji option"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"gif"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"Default value is true,decides if the input field will have gif option"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"file"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"Default value is true,decides if the input field will have file upload option"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"isConnected"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"Default value is true,shows the connect button if signer, account and pgpPrivateKey is not passed"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"autoConnect"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:"false"}),(0,r.jsx)(n.td,{children:"Default value is false, decrypts pgpPrivateKey after reload if true, or else disconnects the existing wallet connection"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onVerificationFail"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"function"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Function to perfom any task on gating access verification fail modal"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"messageInput"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"Default value is true,decides whether to show the message input field"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"chatProfile"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"Default value is true, decides whether to show the chat profile header"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"chatViewList"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"Default value is true,decides whether to show the message list"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"groupInfoModalBackground"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ModalBackgroundType"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsxs)(n.td,{children:["Default value is ",(0,r.jsx)(n.code,{children:'"OVERLAY"'}),", decides the group info modal background, possible values are ",(0,r.jsx)(n.code,{children:'"OVERLAY"'})," &#124 ",(0,r.jsx)(n.code,{children:'"BLUR"'})," &#124 ",(0,r.jsx)(n.code,{children:'"TRANSPARENT"'})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.code,{children:"chatFilterList"})})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Array<string>"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Array of cid's of messages that needs to be excluded from chatViewList"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"limit"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Number of messages fetched in each paginated api call,default value is 10"})]})]})]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Note: Parameters ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.code,{children:"in this style"})})," are mandatory."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"live-playground",children:"Live playground"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:'customPropMinimized="true"\n\n// DO NOT FORGET TO IMPORT LIBRARIES\n// NOT NEEDED HERE SINCE PLAYGROUND IMPORTS INTERNALLY\n// import { ChatUIProvider, ChatView } from @pushprotocol/restapi;\nfunction App(props) {\n  // define custom chat theme for your frontend and pass it in ChatUIProvider\n  const PushChatTheme = {\n    borderRadius: {\n      ChatView: "32px",\n      chatProfile: "29px",\n      messageInput: "29px",\n      searchInput: "99px",\n      modal: "16px",\n      modalInnerComponents: "12px",\n    },\n\n    backgroundColor: {\n      ChatViewBackground: "rgba(18, 18, 24, 0.65)",\n      chatProfileBackground: "#2A2A39",\n      messageInputBackground: "transparent",\n      chatSentBubbleBackground: "#AF3FB1",\n      chatReceivedBubbleBackground: "#424258",\n      encryptionMessageBackground: "#2A2A39",\n      buttonBackground: "rgb(202, 89, 155)",\n      modalBackground: "#2F3137",\n      criteriaLabelBackground: "rgb(47, 49, 55)",\n      modalInputBackground: "transparent",\n      modalHoverBackground: "rgb(64, 70, 80)",\n      buttonDisableBackground: "#787E99",\n      toastSuccessBackground:\n        "linear-gradient(90.15deg, #30CC8B -125.65%, #30CC8B -125.63%, #2F3137 42.81%)",\n      toastErrorBackground:\n        "linear-gradient(89.96deg, #FF2070 -101.85%, #2F3137 51.33%)",\n      toastShadowBackground: "#00000010",\n    },\n\n    fontSize: {\n      chatProfileText: "17px",\n      messageInputText: "16px",\n      chatSentBubbleText: "14px",\n      chatReceivedBubbleText: "14px",\n      timestamp: "15px",\n      // chatBubblesSenderAddressText: \'16px\',\n      encryptionMessageText: "13px",\n      chatReceivedBubbleAddressText: "12px",\n      chatReceivedBubbleTimestampText: "12px",\n      chatSentBubbleTimestampText: "12px",\n      searchInputText: "16px",\n      searchPlaceholderText: "16px",\n    },\n\n    fontWeight: {\n      chatProfileText: "500",\n      messageInputText: "400",\n      chatSentBubbleText: "400",\n      chatReceivedBubbleText: "400",\n      timestamp: "300",\n      // chatBubblesSenderAddressText: \'300\',\n      encryptionMessageText: "400",\n      chatReceivedBubbleAddressText: "300",\n      chatReceivedBubbleTimestampText: "400",\n      chatSentBubbleTimestampText: "400",\n      searchInputText: "400",\n      searchPlaceholderText: "400",\n    },\n\n    fontFamily: "inherit",\n\n    border: {\n      ChatView: "1px solid #3A3A4A",\n      chatProfile: "1px solid #3A3A4A",\n      messageInput: "1px solid #3A3A4A",\n      searchInput: "1px solid transparent",\n      modal: "none",\n      modalInnerComponents: "1px solid rgb(74, 79, 103)",\n    },\n\n    iconColor: {\n      emoji: "rgba(120, 126, 153, 1)",\n      attachment: "rgba(120, 126, 153, 1)",\n      sendButton: "rgba(120, 126, 153, 1)",\n      groupSettings: "rgba(120, 126, 153, 1)",\n    },\n    textColor: {\n      chatProfileText: "#fff",\n      messageInputText: "rgb(182, 188, 214)",\n      chatSentBubbleText: "#fff",\n      chatReceivedBubbleText: "#fff",\n      timestamp: "#87879A",\n      // chatBubblesSenderAddressText: \'rgb(182, 188, 214)\',\n      encryptionMessageText: "rgb(182, 188, 214)",\n      buttonText: "#fff",\n      chatReceivedBubbleAddressText: "#87879A",\n      chatReceivedBubbleTimestampText: "red",\n      chatSentBubbleTimestampText: "red",\n      searchInputText: "#fff",\n      searchPlaceholderText: "rgb(101, 119, 149)",\n      modalHeadingText: "#fff",\n      modalSubHeadingText: "rgb(182, 188, 214)",\n      buttonDisableText: "#B6BCD6",\n    },\n    backdropFilter: "blur(6.5px)",\n    spinnerColor: "rgb(202, 89, 155)",\n    scrollbarColor: "rgb(202, 89, 155)",\n    // backdropFilter: \'blur(6.5px)\',\n    // modalBackgroundColor:\'rgba(47, 49, 55, 1)\',\n    // spinnerColor:\'rgb(202, 89, 155)\',\n    // scrollbarColor:\'rgb(202, 89, 155)\',\n    // //the rest param needs to be included in categories\n    // modalPrimaryTextColor: \'#B6BCD6\',\n    // modalSearchBarBorderColor: \'#4A4F67\',\n    // modalSearchBarBackground: \'#282A2E\',\n    // snapFocusBg: \'#404650\',\n    // groupButtonBackgroundColor: \'#2F3137\',\n    // groupButtonTextColor: \'#787E99\',\n    // modalConfirmButtonBorder: \'1px solid #787E99\',\n    // groupSearchProfilBackground: \'#404650\',\n    // modalInputBorderColor: \'#4A4F67\',\n    // snackbarBorderText: \'#B6BCD6\',\n    // snackbarBorderIcon:\n    //     \'brightness(0) saturate(100%) invert(89%) sepia(8%) saturate(1567%) hue-rotate(191deg) brightness(86%) contrast(93%)\',\n    // modalContentBackground: \'#2F3137\',\n    // modalProfileTextColor: \'#B6BCD6\',\n    // toastSuccessBackground:\n    //     \'linear-gradient(90.15deg, #30CC8B -125.65%, #30CC8B -125.63%, #2F3137 42.81%)\',\n    // toastErrorBackground:\n    //     \'linear-gradient(89.96deg, #FF2070 -101.85%, #2F3137 51.33%)\',\n    // toastShadowColor: \'#00000010\',\n    // toastBorderColor: \'#4A4F67\',\n    // mainBg: \'#000\',\n    // modalBorderColor: \'#4A4F67\',\n    // modalDescriptionTextColor: \'#787E99\',\n    // modalIconColor: \'#787E99\',\n    // pendingCardBackground: \'rgba(173, 176, 190, 0.08)\',\n    // modalHeadingColor: \'#B6BCD6\',\n    // defaultBorder: \'#4A4F67\',\n  };\n\n  return (\n    <>\n      <h2>Live chat with custom theme and token gated</h2>\n      <div\n        style={{\n          height: "75vh",\n          margin: "20px auto",\n          background: "black",\n          borderRadius: "40px",\n        }}\n      >\n        <ChatUIProvider theme={PushChatTheme}>\n          <ChatView\n            chatId="4ac5ab85c9c3d57adbdf2dba79357e56b2f9ef0256befe750d9f93af78d2ca68"\n            limit={10}\n            isConnected={true}\n            onVerificationFail={() => setShowFaucet(true)}\n          />\n        </ChatUIProvider>\n      </div>\n    </>\n  );\n}\n'})})]})}function x(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},85162:function(e,n,t){t.d(n,{Z:function(){return s}});t(67294);var r=t(86010),a={tabItem:"tabItem_Ymn6"},i=t(85893);function s(e){var n=e.children,t=e.hidden,s=e.className;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.default)(a.tabItem,s),hidden:t,children:n})}},74866:function(e,n,t){t.d(n,{Z:function(){return y}});var r=t(67294),a=t(86010),i=t(12466),s=t(16550),o=t(20469),d=t(91980),c=t(67392),l=t(50012);function u(e){var n,t;return null!==(n=null===(t=r.Children.toArray(e).filter((function(e){return"\n"!==e})).map((function(e){if(!e||(0,r.isValidElement)(e)&&((n=e.props)&&"object"==typeof n&&"value"in n))return e;var n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))||void 0===t?void 0:t.filter(Boolean))&&void 0!==n?n:[]}function h(e){var n=e.values,t=e.children;return(0,r.useMemo)((function(){var e=null!=n?n:function(e){return u(e).map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes,default:n.default}}))}(t);return function(e){var n=(0,c.l)(e,(function(e,n){return e.value===n.value}));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function p(e){var n=e.value;return e.tabValues.some((function(e){return e.value===n}))}function x(e){var n=e.queryString,t=void 0!==n&&n,a=e.groupId,i=(0,s.k6)(),o=function(e){var n=e.queryString,t=void 0!==n&&n,r=e.groupId;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=r?r:null}({queryString:t,groupId:a});return[(0,d._X)(o),(0,r.useCallback)((function(e){if(o){var n=new URLSearchParams(i.location.search);n.set(o,e),i.replace(Object.assign({},i.location,{search:n.toString()}))}}),[o,i])]}function f(e){var n,t,a,i,s=e.defaultValue,d=e.queryString,c=void 0!==d&&d,u=e.groupId,f=h(e),b=(0,r.useState)((function(){return function(e){var n,t=e.defaultValue,r=e.tabValues;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+r.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}var a=null!==(n=r.find((function(e){return e.default})))&&void 0!==n?n:r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:s,tabValues:f})})),g=b[0],m=b[1],j=x({queryString:c,groupId:u}),v=j[0],C=j[1],y=(n=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),t=(0,l.Nk)(n),a=t[0],i=t[1],[a,(0,r.useCallback)((function(e){n&&i.set(e)}),[n,i])]),T=y[0],B=y[1],w=function(){var e=null!=v?v:T;return p({value:e,tabValues:f})?e:null}();return(0,o.Z)((function(){w&&m(w)}),[w]),{selectedValue:g,selectValue:(0,r.useCallback)((function(e){if(!p({value:e,tabValues:f}))throw new Error("Can't select invalid tab value="+e);m(e),C(e),B(e)}),[C,B,f]),tabValues:f}}var b=t(72389),g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"},m=t(85893);function j(e){var n=e.className,t=e.block,r=e.selectedValue,s=e.selectValue,o=e.tabValues,d=[],c=(0,i.o5)().blockElementScrollPositionUntilNextRender,l=function(e){var n=e.currentTarget,t=d.indexOf(n),a=o[t].value;a!==r&&(c(n),s(a))},u=function(e){var n,t=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":var r,a=d.indexOf(e.currentTarget)+1;t=null!==(r=d[a])&&void 0!==r?r:d[0];break;case"ArrowLeft":var i,s=d.indexOf(e.currentTarget)-1;t=null!==(i=d[s])&&void 0!==i?i:d[d.length-1]}null===(n=t)||void 0===n||n.focus()};return(0,m.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.default)("tabs",{"tabs--block":t},n),children:o.map((function(e){var n=e.value,t=e.label,i=e.attributes;return(0,m.jsx)("li",Object.assign({role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:function(e){return d.push(e)},onKeyDown:u,onClick:l},i,{className:(0,a.default)("tabs__item",g.tabItem,null==i?void 0:i.className,{"tabs__item--active":r===n}),children:null!=t?t:n}),n)}))})}function v(e){var n=e.lazy,t=e.children,a=e.selectedValue,i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){var s=i.find((function(e){return e.props.value===a}));return s?(0,r.cloneElement)(s,{className:"margin-top--md"}):null}return(0,m.jsx)("div",{className:"margin-top--md",children:i.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a})}))})}function C(e){var n=f(e);return(0,m.jsxs)("div",{className:(0,a.default)("tabs-container",g.tabList),children:[(0,m.jsx)(j,Object.assign({},e,n)),(0,m.jsx)(v,Object.assign({},e,n))]})}function y(e){var n=(0,b.Z)();return(0,m.jsx)(C,Object.assign({},e,{children:u(e.children)}),String(n))}},8069:function(e,n,t){n.Z=t.p+"assets/images/chat-view-6ad966dbd2d5595085496e8a5fc555dd.png"},11151:function(e,n,t){t.d(n,{Z:function(){return o},a:function(){return s}});var r=t(67294);const a={},i=r.createContext(a);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);