"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[11112],{53399:function(t,n,e){e.r(n),e.d(n,{assets:function(){return r},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return d}});var i=e(85893),o=e(11151);const a={id:"docs-notifications-develop-send-notification-via-smart-contract",title:"Send Notification (via Smart Contract)",hide_title:!0,slug:"./send-notification-via-smart-contract",displayed_sidebar:"pushNotificationSidebar",sidebar_position:13,image:"/assets/docs/previews/docs_notifications_develop--send_notification_(via_smart_contract).png"},s="Send notification using smart contract overview",c={id:"notifications/build/docs-notifications-develop-send-notification-via-smart-contract",title:"Send Notification (via Smart Contract)",description:"Push contracts are designed to act as a communication middleware for your smart contracts which ensures that even smart contracts can communicate with the wallet addresses (ie: web3 users).",source:"@site/docs/notifications/01-build/13-Develop-Send-Notification-Smart-Contract.mdx",sourceDirName:"notifications/01-build",slug:"/notifications/build/send-notification-via-smart-contract",permalink:"/docs/notifications/build/send-notification-via-smart-contract",draft:!1,unlisted:!1,editUrl:"https://github.com/ethereum-push-notification-service/push-website/blob/main/docs/notifications/01-build/13-Develop-Send-Notification-Smart-Contract.mdx",tags:[],version:"current",sidebarPosition:13,frontMatter:{id:"docs-notifications-develop-send-notification-via-smart-contract",title:"Send Notification (via Smart Contract)",hide_title:!0,slug:"./send-notification-via-smart-contract",displayed_sidebar:"pushNotificationSidebar",sidebar_position:13,image:"/assets/docs/previews/docs_notifications_develop--send_notification_(via_smart_contract).png"},sidebar:"pushNotificationSidebar",previous:{title:"Send Notification",permalink:"/docs/notifications/build/send-notification"},next:{title:"Notification Styling",permalink:"/docs/notifications/build/styling-notification-content"}},r={},d=[{value:"Sending notifications from smart contract",id:"sending-notifications-from-smart-contract",level:2},{value:"Step 1\ufe0f\u20e3 - Locate the contract address of Push",id:"step-1\ufe0f\u20e3---locate-the-contract-address-of-push",level:3},{value:"Step 2\ufe0f\u20e3 - Import Push Comm interface",id:"step-2\ufe0f\u20e3---import-push-comm-interface",level:3},{value:"Step 3\ufe0f\u20e3 - Locate your channel address",id:"step-3\ufe0f\u20e3---locate-your-channel-address",level:3},{value:"Step 4\ufe0f\u20e3 - Call the contract function",id:"step-4\ufe0f\u20e3---call-the-contract-function",level:3},{value:"Step 5\ufe0f\u20e3 - Add your smart contract address as your channel delegate",id:"step-5\ufe0f\u20e3---add-your-smart-contract-address-as-your-channel-delegate",level:3}];function l(t){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...t.components},{Head:e}=n;return e||function(t,n){throw new Error("Expected "+(n?"component":"object")+" `"+t+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"send-notification-using-smart-contract-overview",children:"Send notification using smart contract overview"}),"\n",(0,i.jsx)(n.p,{children:"Push contracts are designed to act as a communication middleware for your smart contracts which ensures that even smart contracts can communicate with the wallet addresses (ie: web3 users)."}),"\n",(0,i.jsx)(e,{children:(0,i.jsx)("title",{children:"Send Notification (via Smart Contract) | Push Notifications | Push\nDocumentation"})}),"\n",(0,i.jsx)(n.h2,{id:"sending-notifications-from-smart-contract",children:"Sending notifications from smart contract"}),"\n",(0,i.jsx)(n.h3,{id:"step-1\ufe0f\u20e3---locate-the-contract-address-of-push",children:"Step 1\ufe0f\u20e3 - Locate the contract address of Push"}),"\n",(0,i.jsx)(n.p,{children:"Ensure that you know the contract address of Push Communication smart contract based on the blockchain and network from which you are sending the communication out."}),"\n",(0,i.jsxs)(n.p,{children:["For example: Staging Ethereum contract address is ",(0,i.jsx)(n.code,{children:"0xb3971BCef2D791bc4027BbfedFb47319A4AAaaAa"}),". List of all smart contract and their environment is available here \ud83d\udc49 ",(0,i.jsx)(n.a,{href:"/docs/notifications/push-smart-contracts/contract-addresses/",title:"List of all relevant push protocol smart contract addresses",children:"Push smart contract addresses"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"step-2\ufe0f\u20e3---import-push-comm-interface",children:"Step 2\ufe0f\u20e3 - Import Push Comm interface"}),"\n",(0,i.jsx)(n.p,{children:"Start by importing the Push comm contract interface in your smart contract \ud83d\udc47"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:"// PUSH Comm Contract Interface\ninterface IPUSHCommInterface {\n    function sendNotification(address _channel, address _recipient, bytes calldata _identity) external;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"step-3\ufe0f\u20e3---locate-your-channel-address",children:"Step 3\ufe0f\u20e3 - Locate your channel address"}),"\n",(0,i.jsxs)(n.p,{children:["Ensure your channel is up and running by following this guide - ",(0,i.jsx)(n.a,{href:"/docs/notifications/tutorials/create-your-channel/",title:"Guide explaining how to create your channel",children:"Creating your channel"}),". Note down your channel address which you need to put in the code below as ",(0,i.jsx)(n.strong,{children:"YOUR_CHANNEL_ADDRESS"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"step-4\ufe0f\u20e3---call-the-contract-function",children:"Step 4\ufe0f\u20e3 - Call the contract function"}),"\n",(0,i.jsxs)(n.p,{children:["Next call the function ",(0,i.jsx)(n.code,{children:"sendNotification(address _channel, address _recipient, bytes calldata _identity)"})," and pass the address of the channel, recipient and the identity based on your needs."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:'IPUSHCommInterface(EPNS_COMM_CONTRACT_ADDRESS_FOR_SPECIFIC_BLOCKCHAIN).sendNotification(\n    YOUR_CHANNEL_ADDRESS, // from channel - recommended to set channel via dApp and put it\'s value -> then once contract is deployed, go back and add the contract address as delegate for your channel\n    to, // to recipient, put address(this) in case you want Broadcast or Subset. For targeted put the address to which you want to send\n    bytes(\n        string(\n            // We are passing identity here: https://push.org/docs/notifications/notification-standards/notification-standards-advance/#notification-identity\n            abi.encodePacked(\n                "0", // this represents minimal identity, learn more: https://push.org/docs/notifications/notification-standards/notification-standards-advance/#notification-identity\n                "+", // segregator\n                "3", // define notification type:  https://push.org/docs/notifications/build/types-of-notification (1, 3 or 4) = (Broadcast, targeted or subset)\n                "+", // segregator\n                "Title", // this is notification title\n                "+", // segregator\n                "Body" // notification body\n            )\n        )\n    )\n);\n'})}),"\n",(0,i.jsx)(n.h3,{id:"step-5\ufe0f\u20e3---add-your-smart-contract-address-as-your-channel-delegate",children:"Step 5\ufe0f\u20e3 - Add your smart contract address as your channel delegate"}),"\n",(0,i.jsxs)(n.p,{children:["The last step is to go back to your channel and add the smart contract address as a delegate ensuring notifications sent by your smart contract are routed through your channel and presented to your users. Checkout ",(0,i.jsx)(n.a,{href:"/docs/notifications/tutorials/create-your-channel/#adding-delegates-for-channel",title:"Guide to adding delegates to your channel",children:"guide for adding delegates for channel"})," to understand how to add delegates to your channel."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["Here's an example of ",(0,i.jsx)(n.a,{href:"/docs/notifications/tutorials/token-transfer-notification-from-smart-contract/",children:"how to build your ERC-20 token with in-built notifications"})]})})]})}function u(t={}){const{wrapper:n}={...(0,o.a)(),...t.components};return n?(0,i.jsx)(n,{...t,children:(0,i.jsx)(l,{...t})}):l(t)}},11151:function(t,n,e){e.d(n,{Z:function(){return c},a:function(){return s}});var i=e(67294);const o={},a=i.createContext(o);function s(t){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function c(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:s(t.components),i.createElement(a.Provider,{value:n},t.children)}}}]);